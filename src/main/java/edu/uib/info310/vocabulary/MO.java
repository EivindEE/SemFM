package edu.uib.info310.vocabulary;
import com.hp.hpl.jena.rdf.model.Model ;
import com.hp.hpl.jena.rdf.model.ModelFactory ;
import com.hp.hpl.jena.rdf.model.Property ;
import com.hp.hpl.jena.rdf.model.Resource ;
/**
 * Vocabulary definitions from musicontology.rdfs
 * Can also be found on http://purl.org/ontology/mo/ 
 * @author Auto-generated by Eivind Elseth 
 */
 
 public class MO {
  /** <p>The RDF model that holds the vocabulary terms</p> */
    private static Model m_model = ModelFactory.createDefaultModel();
    
    /** <p>The namespace of the vocabulary as a string</p> */
    public static final String NS = "http://purl.org/ontology/mo/";
    
    /** <p>The namespace of the vocabulary as a string</p>
     *  @see #NS */
    public static String getURI() {return NS;}
    
    /** <p>The namespace of the vocabulary as a resource</p> */
    public static final Resource NAMESPACE = m_model.createResource( NS );
		
		
			/** <p>
        An analog signal.
    </p>
			* <p>Subclass of:<ul><li>Signal</li></ul></p> 
			*/
			public static final Resource AnalogSignal =  m_model.createResource( "http://purl.org/ontology/mo/AnalogSignal" );
		
			/** <p>
        An arrangement event.
        Takes as agent the arranger, and produces a score (informational object, not the actually published score).
    </p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource Arrangement =  m_model.createResource( "http://purl.org/ontology/mo/Arrangement" );
		
			/** <p/>
			* <p>Subclass of:<ul><li>http://xmlns.com/foaf/0.1/Agent</li></ul></p> 
			*/
			public static final Resource Arranger =  m_model.createResource( "http://purl.org/ontology/mo/Arranger" );
		
			/** <p>An audio file, which may be available on a local file system or through http, ftp, etc.</p>
			* <p>Subclass of:<ul><li>Medium</li><li>http://xmlns.com/foaf/0.1/Document</li></ul></p> 
			*/
			public static final Resource AudioFile =  m_model.createResource( "http://purl.org/ontology/mo/AudioFile" );
		
			/** <p>Compact Disc used as medium to record a musical manifestation.</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource CD =  m_model.createResource( "http://purl.org/ontology/mo/CD" );
		
			/** <p/>
			* <p>Subclass of:<ul><li>http://xmlns.com/foaf/0.1/Agent</li></ul></p> 
			*/
			public static final Resource Composer =  m_model.createResource( "http://purl.org/ontology/mo/Composer" );
		
			/** <p>
        A composition event.
        Takes as agent the composer himself.
        It produces a MusicalWork, or a MusicalExpression (when the initial "product" is a score, for example), or both...
    </p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource Composition =  m_model.createResource( "http://purl.org/ontology/mo/Composition" );
		
			/** <p/>
			* <p>Subclass of:<ul><li>http://xmlns.com/foaf/0.1/Agent</li></ul></p> 
			*/
			public static final Resource Conductor =  m_model.createResource( "http://purl.org/ontology/mo/Conductor" );
		
			/** <p>Organization or group of individuals and/or other organizations involved in the music market.</p>
			* <p>Subclass of:<ul><li>http://xmlns.com/foaf/0.1/Organization</li></ul></p> 
			*/
			public static final Resource CorporateBody =  m_model.createResource( "http://purl.org/ontology/mo/CorporateBody" );
		
			/** <p>Digital Audio Tape used as medium to record a musical manifestation.</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource DAT =  m_model.createResource( "http://purl.org/ontology/mo/DAT" );
		
			/** <p>Digital Compact Cassette used as medium to record a musical manifestation.</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource DCC =  m_model.createResource( "http://purl.org/ontology/mo/DCC" );
		
			/** <p>DVD-Audio used as medium to record a musical manifestation.</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource DVDA =  m_model.createResource( "http://purl.org/ontology/mo/DVDA" );
		
			/** <p>
        A digital signal
    </p>
			* <p>Subclass of:<ul><li>Signal</li></ul></p> 
			*/
			public static final Resource DigitalSignal =  m_model.createResource( "http://purl.org/ontology/mo/DigitalSignal" );
		
			/** <p>Something available on the E-Donkey peer-2-peer filesharing network</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource ED2K =  m_model.createResource( "http://purl.org/ontology/mo/ED2K" );
		
			/** <p>
        A festival - musical/artistic event lasting several days, like Glastonbury, Rock Am Ring...
        We migth decompose this event (which is in fact just a classification of the space/time region related to 
        a particular festival) using hasSubEvent in several performances at different space/time.
    </p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource Festival =  m_model.createResource( "http://purl.org/ontology/mo/Festival" );
		
			/** <p>
        An expressive style of music.
        
        Any taxonomy can be plug-in here. You can either define a genre by yourself, like this:

        :mygenre a mo:Genre; dc:title "electro rock".

        Or you can refer to a DBPedia genre (such as http://dbpedia.org/resource/Baroque_music), allowing semantic web
        clients to access easily really detailed structured information about the genre you are refering to.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
			public static final Resource Genre =  m_model.createResource( "http://purl.org/ontology/mo/Genre" );
		
			/** <p>
        Any of various devices or contrivances that can be used to produce musical tones or sound.
        
        Any taxonomy can be used to subsume this concept. The default one is one extracted by Ivan Herman
        from the Musicbrainz instrument taxonomy, conforming to SKOS. This concept holds a seeAlso link 
        towards this taxonomy.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
			public static final Resource Instrument =  m_model.createResource( "http://purl.org/ontology/mo/Instrument" );
		
			/** <p>
        Instrumentation deals with the techniques of writing music for a specific instrument, 
        including the limitations of the instrument, playing techniques and idiomatic handling of the instrument.
    </p>
			* <p>Subclass of:<ul><li>Arrangement</li></ul></p> 
			*/
			public static final Resource Instrumentation =  m_model.createResource( "http://purl.org/ontology/mo/Instrumentation" );
		
			/** <p>Trade name of a company that produces musical works or expression of musical works.</p>
			* <p>Subclass of:<ul><li>CorporateBody</li></ul></p> 
			*/
			public static final Resource Label =  m_model.createResource( "http://purl.org/ontology/mo/Label" );
		
			/** <p>
                Libretto
        </p>
			* <p>Subclass of:<ul><li>MusicalExpression</li></ul></p> 
			*/
			public static final Resource Libretto =  m_model.createResource( "http://purl.org/ontology/mo/Libretto" );
		
			/** <p/>
			* <p>Subclass of:<ul><li>http://xmlns.com/foaf/0.1/Agent</li></ul></p> 
			*/
			public static final Resource Listener =  m_model.createResource( "http://purl.org/ontology/mo/Listener" );
		
			/** <p>
        Lyrics
    </p>
			* <p>Subclass of:<ul><li>MusicalExpression</li></ul></p> 
			*/
			public static final Resource Lyrics =  m_model.createResource( "http://purl.org/ontology/mo/Lyrics" );
		
			/** <p>Mini Disc used as medium to record a musical manifestation.</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource MD =  m_model.createResource( "http://purl.org/ontology/mo/MD" );
		
			/** <p>Magnetic analogue tape used as medium to record a musical manifestation.</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource MagneticTape =  m_model.createResource( "http://purl.org/ontology/mo/MagneticTape" );
		
			/** <p>A means or instrumentality for storing or communicating musical manifestation.</p>
			* <p>Subclass of:<ul><li>MusicalItem</li></ul></p> 
			*/
			public static final Resource Medium =  m_model.createResource( "http://purl.org/ontology/mo/Medium" );
		
			/** <p>A membership event, where one or several people belongs to a group during a particular time period.</p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource Membership =  m_model.createResource( "http://purl.org/ontology/mo/Membership" );
		
			/** <p>A movement is a self-contained part of a musical work. While individual or selected movements from a composition are sometimes performed separately, a performance of the complete work requires all the movements to be performed in succession.

Often a composer attempts to interrelate the movements thematically, or sometimes in more subtle ways, in order that the individual
movements exert a cumulative effect. In some forms, composers sometimes link the movements, or ask for them to be played without a
pause between them.
    </p>
			* <p>Subclass of:<ul><li>MusicalWork</li></ul></p> 
			*/
			public static final Resource Movement =  m_model.createResource( "http://purl.org/ontology/mo/Movement" );
		
			/** <p>
        A person or a group of people (or a computer :-) ), whose musical 
        creative work shows sensitivity and imagination 
    </p>
			* <p>Subclass of:<ul><li>http://xmlns.com/foaf/0.1/Agent</li></ul></p> 
			*/
			public static final Resource MusicArtist =  m_model.createResource( "http://purl.org/ontology/mo/MusicArtist" );
		
			/** <p>Group of musicians, or musical ensemble, usually popular or folk, playing parts of or improvising off of a musical arrangement. </p>
			* <p>Subclass of:<ul><li>MusicArtist</li><li>http://xmlns.com/foaf/0.1/Group</li></ul></p> 
			*/
			public static final Resource MusicGroup =  m_model.createResource( "http://purl.org/ontology/mo/MusicGroup" );
		
			/** <p>
The intellectual or artistic realization of a work in the form of alpha-numeric, musical, or choreographic notation, sound, etc., or any combination of such forms.    


For example:

Work #1 Franz Schubert's Trout quintet

    * Expression #1 the composer's score
    * Expression #2 sound issued from the performance by the Amadeus Quartet and Hephzibah Menuhin on piano
    * Expression #3 sound issued from the performance by the Cleveland Quartet and Yo-Yo Ma on the cello
    * . . . . 

The Music Ontology defines the following sub-concepts of a MusicalExpression, which should be used instead of MusicalExpression itself: Score (the
result of an arrangement), Sound (produced during a performance), Signal. However, it is possible to stick to FRBR and bypass the worflow
mechanism this ontology defines by using the core FRBR properties on such objects. But it is often better to use events to interconnect such 
expressions (allowing to go deeply into the production process - `this performer was playing this particular instrument at that
particular time').
    
    </p>
			* <p>Subclass of:<ul><li>../../vocab/frbr/core#Expression</li></ul></p> 
			*/
			public static final Resource MusicalExpression =  m_model.createResource( "http://purl.org/ontology/mo/MusicalExpression" );
		
			/** <p>A single exemplar of a musical expression.
    
For example, it could be a single exemplar of a CD. This is normally an single object (a CD) possessed by somebody.

From the FRBR final report: The entity defined as item is a concrete entity. It is in many instances a single physical object (e.g., a copy of a one-volume monograph, a single audio cassette, etc.). There are instances, however, where the entity defined as item comprises more than one physical object (e.g., a monograph issued as two separately bound volumes, a recording issued on three separate compact discs, etc.).

In terms of intellectual content and physical form, an item exemplifying a manifestation is normally the same as the manifestation itself. However, variations may occur from one item to another, even when the items exemplify the same manifestation, where those variations are the result of actions external to the intent of the producer of the manifestation (e.g., damage occurring after the item was produced, binding performed by a library, etc.). 
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
			public static final Resource MusicalItem =  m_model.createResource( "http://purl.org/ontology/mo/MusicalItem" );
		
			/** <p>

This entity is related to the edition/production/publication of a musical expression (musical manifestation are closely related with the music industry (their terms, concepts, definitions, methods (production, publication, etc.), etc.)
    
From the FRBR final report: The entity defined as manifestation encompasses a wide range of materials, including manuscripts, books, periodicals, maps, posters, sound recordings, films, video recordings, CD-ROMs, multimedia kits, etc. As an entity, manifestation represents all the physical objects that bear the same characteristics, in respect to both intellectual content and physical form.


Work #1 J. S. Bach's Six suites for unaccompanied cello

    * Expression #1 sound issued during the performance by Janos Starker recorded in 1963 and 1965
          o Manifestation #1 recordings released on 33 1/3 rpm sound discs in 1965 by Mercury
          o Manifestation #2 recordings re-released on compact disc in 1991 by Mercury 
    * Expression #2 sound issued during the performances by Yo-Yo Ma recorded in 1983
          o Manifestation #1 recordings released on 33 1/3 rpm sound discs in 1983 by CBS Records
          o Manifestation #2 recordings re-released on compact disc in 1992 by CBS Records 

          
Changes that occur deliberately or even inadvertently in the production process that affect the copies result, strictly speaking, in a new manifestation. A manifestation resulting from such a change may be identified as a particular "state" or "issue" of the publication.

Changes that occur to an individual copy after the production process is complete (e.g., the loss of a page, rebinding, etc.) are not considered to result in a new manifestation. That copy is simply considered to be an exemplar (or item) of the manifestation that deviates from the copy as produced.

With the entity defined as manifestation we can describe the physical characteristics of a set of items and the characteristics associated with the production and distribution of that set of items that may be important factors in enabling users to choose a manifestation appropriate to their physical needs and constraints, and to identify and acquire a copy of that manifestation.

Defining manifestation as an entity also enables us to draw relationships between specific manifestations of a work. We can use the relationships between manifestations to identify, for example, the specific publication that was used to create a microreproduction.          

</p>
			* <p>Subclass of:<ul><li>../../vocab/frbr/core#Manifestation</li></ul></p> 
			*/
			public static final Resource MusicalManifestation =  m_model.createResource( "http://purl.org/ontology/mo/MusicalManifestation" );
		
			/** <p>
    Distinct intellectual or artistic musical creation.
    
From the FRBR final report: A work is an abstract entity; there is no single material object one can point to as the work. We recognize the work through individual realizations or expressions of the work, but the work itself exists only in the commonality of
content between and among the various expressions of the work. When we speak of Homer's Iliad as a work, our point of reference is not a particular recitation or text of the work, but the intellectual creation that lies behind all the various expressions of the work.     

For example:

work #1 J. S. Bach's The art of the fugue

    
    </p>
			* <p>Subclass of:<ul><li>../../vocab/frbr/core#Work</li></ul></p> 
			*/
			public static final Resource MusicalWork =  m_model.createResource( "http://purl.org/ontology/mo/MusicalWork" );
		
			/** <p>
            Orchestration includes, in addition to instrumentation, the handling of groups of instruments and their balance and interaction.
    </p>
			* <p>Subclass of:<ul><li>Arrangement</li></ul></p> 
			*/
			public static final Resource Orchestration =  m_model.createResource( "http://purl.org/ontology/mo/Orchestration" );
		
			/** <p>
        A performance event. 
        It might include as agents performers, engineers, conductors, or even listeners.
        It might include as factors a score, a MusicalWork, musical instruments. 
        It might produce a sound:-)
    </p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource Performance =  m_model.createResource( "http://purl.org/ontology/mo/Performance" );
		
			/** <p/>
			* <p>Subclass of:<ul><li>http://xmlns.com/foaf/0.1/Agent</li></ul></p> 
			*/
			public static final Resource Performer =  m_model.createResource( "http://purl.org/ontology/mo/Performer" );
		
			/** <p>A published libretto</p>
			* <p>Subclass of:<ul><li>MusicalManifestation</li></ul></p> 
			*/
			public static final Resource PublishedLibretto =  m_model.createResource( "http://purl.org/ontology/mo/PublishedLibretto" );
		
			/** <p>Published lyrics, as a book or as a text file, for example</p>
			* <p>Subclass of:<ul><li>MusicalManifestation</li></ul></p> 
			*/
			public static final Resource PublishedLyrics =  m_model.createResource( "http://purl.org/ontology/mo/PublishedLyrics" );
		
			/** <p>A published score (subclass of MusicalManifestation)</p>
			* <p>Subclass of:<ul><li>MusicalManifestation</li></ul></p> 
			*/
			public static final Resource PublishedScore =  m_model.createResource( "http://purl.org/ontology/mo/PublishedScore" );
		
			/** <p>A published record (manifestation which first aim is to render the product of a recording)</p>
			* <p>Subclass of:<ul><li>MusicalManifestation</li></ul></p> 
			*/
			public static final Resource Record =  m_model.createResource( "http://purl.org/ontology/mo/Record" );
		
			/** <p>
        A recording event.
        Takes a sound as a factor to produce a signal (analog or digital).
        The location of such events (if any) is the actual location of the corresponding
        microphone or the "recording device".
    </p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource Recording =  m_model.createResource( "http://purl.org/ontology/mo/Recording" );
		
			/** <p>A set of performances/recordings/mastering events. This event can be decomposed in its constituent events using event:sub_event</p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource RecordingSession =  m_model.createResource( "http://purl.org/ontology/mo/RecordingSession" );
		
			/** <p>A specific release, with barcode, box, liner notes, cover art, and a number of records</p>
			* <p>Subclass of:<ul><li>MusicalManifestation</li></ul></p> 
			*/
			public static final Resource Release =  m_model.createResource( "http://purl.org/ontology/mo/Release" );
		
			/** <p>A release event, in a particular place (e.g. a country) at a particular time. Other factors of this event might include cover art, liner notes, box, etc. or a release grouping all these.</p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource ReleaseEvent =  m_model.createResource( "http://purl.org/ontology/mo/ReleaseEvent" );
		
			/** <p>Musical manifestation release status.</p>
			* <p>Subclass of:<ul/></p> 
			*/
			public static final Resource ReleaseStatus =  m_model.createResource( "http://purl.org/ontology/mo/ReleaseStatus" );
		
			/** <p>
        Release type of a particular manifestation, such as "album" or "interview"...
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
			public static final Resource ReleaseType =  m_model.createResource( "http://purl.org/ontology/mo/ReleaseType" );
		
			/** <p>Super Audio Compact Disc used as medium to record a musical manifestation.</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource SACD =  m_model.createResource( "http://purl.org/ontology/mo/SACD" );
		
			/** <p>
        Here, we are dealing with the informational object (the MusicalExpression), not the actually "published" score.
        This may be, for example, the product of an arrangement process.
    </p>
			* <p>Subclass of:<ul><li>MusicalExpression</li></ul></p> 
			*/
			public static final Resource Score =  m_model.createResource( "http://purl.org/ontology/mo/Score" );
		
			/** <p>
        A show - a musical event lasting several days, in a particular venue. Examples can be
        "The Magic Flute" at the Opera Bastille, August 2005, or a musical in the west end...
    </p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource Show =  m_model.createResource( "http://purl.org/ontology/mo/Show" );
		
			/** <p>
        A subclass of MusicalExpression, representing a signal, for example a master signal produced by a performance and a recording.
    </p>
			* <p>Subclass of:<ul><li>MusicalExpression</li></ul></p> 
			*/
			public static final Resource Signal =  m_model.createResource( "http://purl.org/ontology/mo/Signal" );
		
			/** <p>
        A musical expression representing a group of signals, for example a set of masters resulting from a whole recording/mastering session.
    </p>
			* <p>Subclass of:<ul><li>MusicalExpression</li></ul></p> 
			*/
			public static final Resource SignalGroup =  m_model.createResource( "http://purl.org/ontology/mo/SignalGroup" );
		
			/** <p>Single person whose musical creative work shows sensitivity and imagination.</p>
			* <p>Subclass of:<ul><li>MusicArtist</li><li>http://xmlns.com/foaf/0.1/Person</li></ul></p> 
			*/
			public static final Resource SoloMusicArtist =  m_model.createResource( "http://purl.org/ontology/mo/SoloMusicArtist" );
		
			/** <p>
        A subclass of MusicalExpression, representing a sound. Realisation of a MusicalWork during a musical Performance.
    </p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li><li>MusicalExpression</li></ul></p> 
			*/
			public static final Resource Sound =  m_model.createResource( "http://purl.org/ontology/mo/Sound" );
		
			/** <p/>
			* <p>Subclass of:<ul><li>http://xmlns.com/foaf/0.1/Agent</li></ul></p> 
			*/
			public static final Resource SoundEngineer =  m_model.createResource( "http://purl.org/ontology/mo/SoundEngineer" );
		
			/** <p>Transmission over a network  used as medium to broadcast a musical manifestation</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource Stream =  m_model.createResource( "http://purl.org/ontology/mo/Stream" );
		
			/** <p>Something available on the Bittorrent peer-2-peer filesharing network</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource Torrent =  m_model.createResource( "http://purl.org/ontology/mo/Torrent" );
		
			/** <p>A track on a particular record</p>
			* <p>Subclass of:<ul><li>MusicalManifestation</li></ul></p> 
			*/
			public static final Resource Track =  m_model.createResource( "http://purl.org/ontology/mo/Track" );
		
			/** <p>Transcription event</p>
			* <p>Subclass of:<ul><li>../../NET/c4dm/event.owl#Event</li></ul></p> 
			*/
			public static final Resource Transcription =  m_model.createResource( "http://purl.org/ontology/mo/Transcription" );
		
			/** <p>Vinyl used as medium to record a musical manifestation</p>
			* <p>Subclass of:<ul><li>Medium</li></ul></p> 
			*/
			public static final Resource Vinyl =  m_model.createResource( "http://purl.org/ontology/mo/Vinyl" );
		
					/** <p>Relates an artist to a date at which its activity ended</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property activity_end =  m_model.createProperty( "http://purl.org/ontology/mo/activity_end" );
		
					/** <p>Relates an artist to a date at which its activity started</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property activity_start =  m_model.createProperty( "http://purl.org/ontology/mo/activity_start" );
		
					/** <p>Used to link a work or the expression of a work to its corresponding Amazon ASINs page.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property amazon_asin =  m_model.createProperty( "http://purl.org/ontology/mo/amazon_asin" );
		
					/** <p>
        Associates a work to an arrangement event where it was arranged
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property arranged_in =  m_model.createProperty( "http://purl.org/ontology/mo/arranged_in" );
		
					/** <p>
                Associates an arrangement event to a work
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property arrangement_of =  m_model.createProperty( "http://purl.org/ontology/mo/arrangement_of" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property availableAs =  m_model.createProperty( "http://purl.org/ontology/mo/availableAs" );
		
					/** <p>
        Relates a musical manifestation to a musical item (this album, and my particular cd). By using
        this property, there is no assumption on wether the full content is available on the linked item.
        To be explicit about this, you can use a sub-property, such as mo:item (the full manifestation
        is available on that item) or mo:preview (only a part of the manifestation is available on
        that item).

        This is a subproperty of frbr:examplar.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property available_as =  m_model.createProperty( "http://purl.org/ontology/mo/available_as" );
		
					/** <p>Used to link an artist to their online biography.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property biography =  m_model.createProperty( "http://purl.org/ontology/mo/biography" );
		
					/** <p>
        Associates a digital signal to the number a bits used to encode one sample. Range is xsd:int.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property bitsPerSample =  m_model.createProperty( "http://purl.org/ontology/mo/bitsPerSample" );
		
					/** <p>
        Indicates the BPM of a MusicalWork or a particular Performance 
        Beats per minute: the pace of music measured by the number of beats occurring in 60 seconds.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property bpm =  m_model.createProperty( "http://purl.org/ontology/mo/bpm" );
		
					/** <p>Links a release with the corresponding catalogue number</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property catalogue_number =  m_model.createProperty( "http://purl.org/ontology/mo/catalogue_number" );
		
					/** <p>
        Associates a signal to the number of channels it holds (mono --&gt; 1, stereo --&gt; 2). Range is xsd:int.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property channels =  m_model.createProperty( "http://purl.org/ontology/mo/channels" );
		
					/** <p>Used to relate two collaborating people on a work.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property collaborated_with =  m_model.createProperty( "http://purl.org/ontology/mo/collaborated_with" );
		
					/** <p>Indicates that a musical manifestation is a compilation of several Signals.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property compilation_of =  m_model.createProperty( "http://purl.org/ontology/mo/compilation_of" );
		
					/** <p>Used to relate an person or a group of person who compiled the manifestation of a musical work.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property compiled =  m_model.createProperty( "http://purl.org/ontology/mo/compiled" );
		
					/** <p>Used to relate the manifestation of a musical work to a person or a group of person who compiled it.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property compiler =  m_model.createProperty( "http://purl.org/ontology/mo/compiler" );
		
					/** <p>
        Associates a MusicalWork to the Composition event pertaining
        to its creation. For example, I might use this property to associate
        the Magic Flute to its composition event, occuring during 1782 and having as
        a mo:composer Mozart.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property composed_in =  m_model.createProperty( "http://purl.org/ontology/mo/composed_in" );
		
					/** <p>
        Associates a composition event to the actual composer. For example,
        this property could link the event corresponding to the composition of the
        Magic Flute in 1782 to Mozart himself (who obviously has a FOAF profile:-) ).
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property composer =  m_model.createProperty( "http://purl.org/ontology/mo/composer" );
		
					/** <p>Relates agents to the performances they were conducting</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property conducted =  m_model.createProperty( "http://purl.org/ontology/mo/conducted" );
		
					/** <p>Relates a performance to the conductor involved</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property conductor =  m_model.createProperty( "http://purl.org/ontology/mo/conductor" );
		
					/** <p>
        Relates a signal to another signal, which has been sampled.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property contains_sample_from =  m_model.createProperty( "http://purl.org/ontology/mo/contains_sample_from" );
		
					/** <p>A related signal from which the described signal is derived.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property derived_from =  m_model.createProperty( "http://purl.org/ontology/mo/derived_from" );
		
					/** <p>Used to links an artist to an online discography of their musical works. The discography should provide a summary of each released musical work of the artist.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property discography =  m_model.createProperty( "http://purl.org/ontology/mo/discography" );
		
					/** <p>Used to link a musical work or the expression of a musical work, an artist or a corporate body to to its corresponding Discogs page.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property discogs =  m_model.createProperty( "http://purl.org/ontology/mo/discogs" );
		
					/** <p>Indicates that all (or most of) the tracks of a musical work or the expression of a musical work were mixed together from all (or most of) the tracks from another musical work or the expression of a musical work to form a so called DJ-Mix. 
    
The tracks might have been altered by pitching (so that the tempo of one track matches the tempo of the following track) and fading (so that one track blends in smoothly with the other). If the tracks have been more substantially altered, the "mo:remix" relationship type is more appropriate. </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property djmix_of =  m_model.createProperty( "http://purl.org/ontology/mo/djmix_of" );
		
					/** <p>Used to relate an artist who djmixed a musical work or the expression of a musical work. 
    
The artist usually selected the tracks, chose their sequence, and slightly changed them by fading (so that one track blends in smoothly with the other) or pitching (so that the tempo of one track matches the tempo of the following track). This applies to a 'Mixtape' in which all tracks were DJ-mixed together into one single long track. </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property djmixed =  m_model.createProperty( "http://purl.org/ontology/mo/djmixed" );
		
					/** <p>Used to relate a work or the expression of a work to an artist who djmixed it. 
    
The artist usually selected the tracks, chose their sequence, and slightly changed them by fading (so that one track blends in smoothly with the other) or pitching (so that the tempo of one track matches the tempo of the following track). This applies to a 'Mixtape' in which all tracks were DJ-mixed together into one single long track. </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property djmixed_by =  m_model.createProperty( "http://purl.org/ontology/mo/djmixed_by" );
		
					/** <p>
                This property can be used to link from a person to the website where they make their works available, or from
                a manifestation (a track or an album, for example) to a web page where it is available for
                download.
        
        It is better to use one of the three sub-properties instead of this one in order to specify wether the
        content can be accessed for free (mo:freedownload), if it is just free preview material (mo:previewdownload), or
        if it can be accessed for some money (mo:paiddownload) (this includes links to the Amazon store, for example).

                This property MUST be used only if the content is just available through a web page (holding, for example
                a Flash application) - it is better to link to actual content directly through the use of mo:available_as and
                mo:Stream, mo:Torrent or mo:ED2K, etc. Therefore, Semantic Web user agents that don't know how to read HTML and even
                less to rip streams from Flash applications can still access the audio content.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property download =  m_model.createProperty( "http://purl.org/ontology/mo/download" );
		
					/** <p>The European Article Number (EAN) is a universal identifier for products, commonly printed in form of barcodes on them. The numbers represented by those codes can either be 8 or 13 digits long, with the 13-digit-version being most common. EANs form a superset of the North American Universal Product Code (UPC) as every UPC can be made an EAN by adding a leading zero to it. Additionally every EAN is also a Japanese Article Number (JAN). The identifiers were formerly assigned by EAN International which merged with Uniform Code Council (UCC, the guys behind the UPCs) and Electronic Commerce Council of Canada (ECCC) to become GS1. </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property ean =  m_model.createProperty( "http://purl.org/ontology/mo/ean" );
		
					/** <p>
        Relates a MusicalItem (a track on a particular CD, an audio file, a stream somewhere) to the signal it encodes.

        This is usually a lower-resolution version of the master signal (issued from a Recording event).
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property encodes =  m_model.createProperty( "http://purl.org/ontology/mo/encodes" );
		
					/** <p>Method used to convert analog electronic signals into digital format such as "MP3 CBR @ 128kbps", "OGG @ 160kbps", "FLAC", etc.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property encoding =  m_model.createProperty( "http://purl.org/ontology/mo/encoding" );
		
					/** <p>Relates a performance or a recording to the engineer involved</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property engineer =  m_model.createProperty( "http://purl.org/ontology/mo/engineer" );
		
					/** <p>Relates agents to the performances/recordings they were engineering in</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property engineered =  m_model.createProperty( "http://purl.org/ontology/mo/engineered" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property eventHomePage =  m_model.createProperty( "http://purl.org/ontology/mo/eventHomePage" );
		
					/** <p>Links a particular event to a web page</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property event_homepage =  m_model.createProperty( "http://purl.org/ontology/mo/event_homepage" );
		
					/** <p>A person, a group of person or an organization exchanging an exemplar of a single manifestation.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property exchange_item =  m_model.createProperty( "http://purl.org/ontology/mo/exchange_item" );
		
					/** <p>Used to link an artist to a fan-created webpage devoted to that artist.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property fanpage =  m_model.createProperty( "http://purl.org/ontology/mo/fanpage" );
		
					/** <p>
        This property can be used to link from a person to the website where they make their works available, or from
        a manifestation (a track or an album, for example) to a web page where it is available for free 
        download.

        This property MUST be used only if the content is just available through a web page (holding, for example
        a Flash application) - it is better to link to actual content directly through the use of mo:available_as and 
        mo:Stream, mo:Torrent or mo:ED2K, etc. Therefore, Semantic Web user agents that don't know how to read HTML and even
        less to rip streams from Flash applications can still access the audio content.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property free_download =  m_model.createProperty( "http://purl.org/ontology/mo/free_download" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property freedownload =  m_model.createProperty( "http://purl.org/ontology/mo/freedownload" );
		
					/** <p>
        Associates an event (like a performance or a recording) to a particular musical genre.
        Further version of this property may also include works and scores in the domain.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property genre =  m_model.createProperty( "http://purl.org/ontology/mo/genre" );
		
					/** <p>The Global Release Identifier (GRid) is a system for uniquely identifying Releases of music over electronic networks (that is, online stores where you can buy music as digital files). As that it can be seen as the equivalent of the BarCode (or more correctly the GTIN) as found on physical releases of music. Like the ISRC (a code for identifying single recordings as found on releases) it was developed by the IFPI but it does not appear to be a standard of the ISO.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property grid =  m_model.createProperty( "http://purl.org/ontology/mo/grid" );
		
					/** <p>Relates a membership event with the corresponding group</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property group =  m_model.createProperty( "http://purl.org/ontology/mo/group" );
		
					/** <p>GTIN is a grouping term for EANs and UPCs. In common speech those are called barcodes although the barcodes are just a representation of those identifying numbers.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property gtin =  m_model.createProperty( "http://purl.org/ontology/mo/gtin" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property has_track =  m_model.createProperty( "http://purl.org/ontology/mo/has_track" );
		
					/** <p>Relates a performance to the headliner(s) involved</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property headliner =  m_model.createProperty( "http://purl.org/ontology/mo/headliner" );
		
					/** <p>Links an artist, a record, etc. to a corresponding web page</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property homepage =  m_model.createProperty( "http://purl.org/ontology/mo/homepage" );
		
					/** <p>Indicates a pictorial image (JPEG, GIF, PNG, Etc.) of a musical work, the expression of a musical work, the manifestation of a work or the examplar of a manifestation.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property image =  m_model.createProperty( "http://purl.org/ontology/mo/image" );
		
					/** <p>Used to link an artist, a musical work or the expression of a musical work to their equivalent page on IMDb, the InternetMovieDatabase.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property imdb =  m_model.createProperty( "http://purl.org/ontology/mo/imdb" );
		
					/** <p>Relates a performance to a musical instrument involved</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property instrument =  m_model.createProperty( "http://purl.org/ontology/mo/instrument" );
		
					/** <p>Adds an involved music artist, who interpreted, remixed, or otherwise modified an existing signal, which resulted in the signal that is here the subject of this relation.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property interpreter =  m_model.createProperty( "http://purl.org/ontology/mo/interpreter" );
		
					/** <p>The Interested Parties Information Code (IPI) is an ISO standard similar to ISBNs for identifying the people or groups with some involvement with a particular musical work / compositions.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property ipi =  m_model.createProperty( "http://purl.org/ontology/mo/ipi" );
		
					/** <p>The International Standard Music Number (ISMN) is an ISO standard similar to ISBNs for identifying printed music publications</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property ismn =  m_model.createProperty( "http://purl.org/ontology/mo/ismn" );
		
					/** <p>
    The ISRC (International Standard Recording Code) is the international identification system for sound recordings and music videorecordings. 
    Each ISRC is a unique and permanent identifier for a specific recording which can be permanently encoded into a product as its digital fingerprint. 
    Encoded ISRC provide the means to automatically identify recordings for royalty payments.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property isrc =  m_model.createProperty( "http://purl.org/ontology/mo/isrc" );
		
					/** <p>Links a musical work to the corresponding ISWC number</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property iswc =  m_model.createProperty( "http://purl.org/ontology/mo/iswc" );
		
					/** <p>
                Relates a musical manifestation to a musical item (this album, and my particular cd) holding the
                entire manifestation, and not just a part of it.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property item =  m_model.createProperty( "http://purl.org/ontology/mo/item" );
		
					/** <p>
        Indicated the key used by the musicians during a performance, or the key of a MusicalWork.
        Any of 24 major or minor diatonic scales that provide the tonal framework for a piece of music.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property key =  m_model.createProperty( "http://purl.org/ontology/mo/key" );
		
					/** <p>Associates a release event with the label releasing the record</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property label =  m_model.createProperty( "http://purl.org/ontology/mo/label" );
		
					/** <p>The Label Code (LC) was introduced in 1977 by the IFPI (International Federation of Phonogram and Videogram Industries) in order to unmistakably identify the different record labels (see Introduction, Record labels) for rights purposes. The Label Code consists historically of 4 figures, presently being extended to 5 figures, preceded by LC and a dash (e.g. LC-0193 = Electrola; LC-0233 = His Master's Voice). Note that the number of countries using the LC is limited, and that the code given on the item is not always accurate.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property lc =  m_model.createProperty( "http://purl.org/ontology/mo/lc" );
		
					/** <p>
        This annotation property associates to a particular Music Ontology term the corresponding
        expressiveness level. These levels can be:

            - 1: Only editorial/Musicbrainz type information
            - 2: Workflow information
            - 3: Even decomposition
        
        This property is mainly used for specification generation.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property level =  m_model.createProperty( "http://purl.org/ontology/mo/level" );
		
					/** <p>Used to link a work or the expression of a work to the license under which they can be manipulated (downloaded, modified, etc). 
    
This is usually used to link to a Creative Commons licence.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property licence =  m_model.createProperty( "http://purl.org/ontology/mo/licence" );
		
					/** <p>Relates agents to the performances they were listening in</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property listened =  m_model.createProperty( "http://purl.org/ontology/mo/listened" );
		
					/** <p>Relates a performance to the listener involved</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property listener =  m_model.createProperty( "http://purl.org/ontology/mo/listener" );
		
					/** <p>Associates lyrics with a musical work</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property lyrics =  m_model.createProperty( "http://purl.org/ontology/mo/lyrics" );
		
					/** <p>Used to link a musical work or the expression of a musical work to a website where people can buy a copy of the musical manifestation.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property mailorder =  m_model.createProperty( "http://purl.org/ontology/mo/mailorder" );
		
					/** <p>Indicates that musical works or the expressions of a musical work were mashed up on this album or track. 
    
This means that two musical works or the expressions of a musical work by different artists are mixed together, over each other, or otherwise combined into a single musical work (usually by a third artist, the remixer).</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property mashup_of =  m_model.createProperty( "http://purl.org/ontology/mo/mashup_of" );
		
					/** <p>The mediatype (file format or MIME type, or physical medium) of a musical manifestation, e.g. a MP3, CD or vinyl.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property media_type =  m_model.createProperty( "http://purl.org/ontology/mo/media_type" );
		
					/** <p>Indicates that a musical expression is a medley of several other musical expressions. 
    
This means that the orignial musical expression were rearranged to create a new musical expression in the form of a medley. </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property medley_of =  m_model.createProperty( "http://purl.org/ontology/mo/medley_of" );
		
					/** <p>
        Indicates a member of a musical group
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property member =  m_model.createProperty( "http://purl.org/ontology/mo/member" );
		
					/** <p>Inverse of the foaf:member property</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property member_of =  m_model.createProperty( "http://purl.org/ontology/mo/member_of" );
		
					/** <p>Relates an agent with related membership events</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property membership =  m_model.createProperty( "http://purl.org/ontology/mo/membership" );
		
					/** <p>Associates a musical work or a score with its meter</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property meter =  m_model.createProperty( "http://purl.org/ontology/mo/meter" );
		
					/** <p>Indicates that a musical work has movements</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property movement =  m_model.createProperty( "http://purl.org/ontology/mo/movement" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property movementNum =  m_model.createProperty( "http://purl.org/ontology/mo/movementNum" );
		
					/** <p>Indicates the position of a movement in a musical work.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property movement_number =  m_model.createProperty( "http://purl.org/ontology/mo/movement_number" );
		
					/** <p>
        Linking an agent, a track or a record to its corresponding Musicbrainz page.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property musicbrainz =  m_model.createProperty( "http://purl.org/ontology/mo/musicbrainz" );
		
					/** <p>Links an object to the corresponding Musicbrainz identifier</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property musicbrainz_guid =  m_model.createProperty( "http://purl.org/ontology/mo/musicbrainz_guid" );
		
					/** <p>Used to link an artist, a musical work or the expression of a musical work to its corresponding MusicMoz page.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property musicmoz =  m_model.createProperty( "http://purl.org/ontology/mo/musicmoz" );
		
					/** <p>Used to link a person to its corresponding MySpace page.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property myspace =  m_model.createProperty( "http://purl.org/ontology/mo/myspace" );
		
					/** <p>Used to link a track to a tabulature file for track in the On-Line Guitar Archive.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property olga =  m_model.createProperty( "http://purl.org/ontology/mo/olga" );
		
					/** <p>Used to link a person with an online community web page like a blog, a wiki, a forum, a livejournal page, Etc.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property onlinecommunity =  m_model.createProperty( "http://purl.org/ontology/mo/onlinecommunity" );
		
					/** <p>
        Used to define a creative work, especially a musical composition numbered to designate the order of a composer's works.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property opus =  m_model.createProperty( "http://purl.org/ontology/mo/opus" );
		
					/** <p>Relates an artist to its geographic origin</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property origin =  m_model.createProperty( "http://purl.org/ontology/mo/origin" );
		
					/** <p>Indicates that two musical manifestations are essentially the same.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property other_release_of =  m_model.createProperty( "http://purl.org/ontology/mo/other_release_of" );
		
					/** <p>
                Provide a link from an artist to a web page where all of that artist's musical work is available for some money,
                or a link from a manifestation (record/track, for example) to a web page providing a paid access to this manifestation.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property paid_download =  m_model.createProperty( "http://purl.org/ontology/mo/paid_download" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property paiddownload =  m_model.createProperty( "http://purl.org/ontology/mo/paiddownload" );
		
					/** <p>
        Associates a Performance to a musical work or an arrangement that is being used as a factor in it.
        For example, I might use this property to attach the Magic Flute musical work to 
        a particular Performance.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property performance_of =  m_model.createProperty( "http://purl.org/ontology/mo/performance_of" );
		
					/** <p>Relates agents to the performances they were performing in</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property performed =  m_model.createProperty( "http://purl.org/ontology/mo/performed" );
		
					/** <p>
        Associates a Musical Work or an Score to Performances in which they were
        a factor. For example, I might use this property in order to 
        associate the Magic Flute to a particular performance at the Opera
        Bastille last year.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property performed_in =  m_model.createProperty( "http://purl.org/ontology/mo/performed_in" );
		
					/** <p>Relates a performance to the performers involved</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property performer =  m_model.createProperty( "http://purl.org/ontology/mo/performer" );
		
					/** <p>A person, a group of person or an organization possessing an exemplar of a single manifestation.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property possess_item =  m_model.createProperty( "http://purl.org/ontology/mo/possess_item" );
		
					/** <p>
                Relates a musical manifestation to a musical item (this album, and my particular cd), which holds
                a preview of the manifestation (eg. one track for an album, or a snippet for a track)
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property preview =  m_model.createProperty( "http://purl.org/ontology/mo/preview" );
		
					/** <p>
                This property can be used to link from a person to the website where they make previews of their works available, or from
                a manifestation (a track or an album, for example) to a web page where a preview download is available.

                This property MUST be used only if the content is just available through a web page (holding, for example
                a Flash application) - it is better to link to actual content directly through the use of mo:available_as and
                mo:Stream, mo:Torrent or mo:ED2K, etc. Therefore, Semantic Web user agents that don't know how to read HTML and even
                less to rip streams from Flash applications can still access the audio content.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property preview_download =  m_model.createProperty( "http://purl.org/ontology/mo/preview_download" );
		
					/** <p>Indicates that an artist primarily plays an instrument, or that a member was primarily playing a particular instrument during his membership</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property primary_instrument =  m_model.createProperty( "http://purl.org/ontology/mo/primary_instrument" );
		
					/** <p>Used to relate an person or a group of person who produced the manifestation of a work.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property produced =  m_model.createProperty( "http://purl.org/ontology/mo/produced" );
		
					/** <p>
        Associates an arrangement event to a score product (score here does not refer to a published score, but more
        an abstract arrangement of a particular work).
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property produced_score =  m_model.createProperty( "http://purl.org/ontology/mo/produced_score" );
		
					/** <p>
                Associates a Recording to the outputted signal.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property produced_signal =  m_model.createProperty( "http://purl.org/ontology/mo/produced_signal" );
		
					/** <p>Associates a recording session with a group of master signals produced by it.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property produced_signal_group =  m_model.createProperty( "http://purl.org/ontology/mo/produced_signal_group" );
		
					/** <p>
                Associates a Performance to a physical Sound that is being produced by it.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property produced_sound =  m_model.createProperty( "http://purl.org/ontology/mo/produced_sound" );
		
					/** <p>
                Associates a composition event to the produced MusicalWork. For example,
                this property could link the event corresponding to the composition of the
                Magic Flute in 1782 to the Magic Flute musical work itself. This musical work
                can then be used in particular performances.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property produced_work =  m_model.createProperty( "http://purl.org/ontology/mo/produced_work" );
		
					/** <p>Used to relate the manifestation of a work to a person or a group of person who produced it.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property producer =  m_model.createProperty( "http://purl.org/ontology/mo/producer" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property producesSignal =  m_model.createProperty( "http://purl.org/ontology/mo/producesSignal" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property producesSound =  m_model.createProperty( "http://purl.org/ontology/mo/producesSound" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property producesWork =  m_model.createProperty( "http://purl.org/ontology/mo/producesWork" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property productOfComposition =  m_model.createProperty( "http://purl.org/ontology/mo/productOfComposition" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property publicationOf =  m_model.createProperty( "http://purl.org/ontology/mo/publicationOf" );
		
					/** <p>Link a particular manifestation to the related signal, score, libretto, or lyrics</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property publication_of =  m_model.createProperty( "http://purl.org/ontology/mo/publication_of" );
		
					/** <p>Used to relate an person or a group of person who published the manifestation of a work.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property published =  m_model.createProperty( "http://purl.org/ontology/mo/published" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property publishedAs =  m_model.createProperty( "http://purl.org/ontology/mo/publishedAs" );
		
					/** <p>
        Links a musical expression (e.g. a signal or a score) to one of its manifestations (e.g. a track on a particular record or a published score).
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property published_as =  m_model.createProperty( "http://purl.org/ontology/mo/published_as" );
		
					/** <p>Used to relate a musical manifestation to a person or a group of person who published it.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property publisher =  m_model.createProperty( "http://purl.org/ontology/mo/publisher" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property publishingLocation =  m_model.createProperty( "http://purl.org/ontology/mo/publishingLocation" );
		
					/** <p>
        Relates a musical manifestation to its publication location.
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property publishing_location =  m_model.createProperty( "http://purl.org/ontology/mo/publishing_location" );
		
					/** <p>
        Link a signal to the PUIDs associated with it, that is, PUID computed from MusicalItems (mo:AudioFile) 
        derived from this signal.
        PUIDs (Portable Unique IDentifier) are the IDs used in the 
        proprietary MusicDNS AudioFingerprinting system which is operated by MusicIP.

        Using PUIDs, one (with some luck) can identify the Signal object associated with a particular audio file, therefore allowing
        to access further information (on which release this track is featured? etc.). Using some more metadata one can identify
        the particular Track corresponding to the audio file (a track on a particular release).</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property puid =  m_model.createProperty( "http://purl.org/ontology/mo/puid" );
		
					/** <p>Associates a release with the records it contains. A single release can be associated with multiple records, for example for a multi-disc release.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property record =  m_model.createProperty( "http://purl.org/ontology/mo/record" );
		
					/** <p>Associates a release with the number of records it contains, e.g. the number of discs it contains in the case of a multi-disc release.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property record_count =  m_model.createProperty( "http://purl.org/ontology/mo/record_count" );
		
					/** <p>Indicates the position of a record in a release (e.g. a 2xLP, etc.).</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property record_number =  m_model.createProperty( "http://purl.org/ontology/mo/record_number" );
		
					/** <p>Associates the side on a vinyl record, where a track is located, e.g. A, B, C, etc. This property can then also be used 
in conjunction with mo:track_number, so that one can infer e.g. "A1", that means, track number 1 on side A.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property record_side =  m_model.createProperty( "http://purl.org/ontology/mo/record_side" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property recordedAs =  m_model.createProperty( "http://purl.org/ontology/mo/recordedAs" );
		
					/** <p>
        This is a shortcut property, allowing to bypass all the Sound/Recording steps. This property
        allows to directly link a Performance to the recorded Signal. This is recommended for "normal"
        users. However, advanced users wanting to express things such as the location of the microphone will
        have to create this shortcut as well as the whole workflow, in order to let the "normal" users access
        simply the, well, simple information:-) .
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property recorded_as =  m_model.createProperty( "http://purl.org/ontology/mo/recorded_as" );
		
					/** <p>
            Associates a physical Sound to a Recording event where it is being used 
        in order to produce a signal. For example, I might use this property to 
        associate the sound produced by a particular performance of the magic flute
        to a given recording, done using my cell-phone.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property recorded_in =  m_model.createProperty( "http://purl.org/ontology/mo/recorded_in" );
		
					/** <p>
            Associates a Recording event to a physical Sound being recorded.
                For example, I might use this property to
                associate a given recording, done using my cell phone, to the 
        sound produced by a particular performance of the magic flute.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property recording_of =  m_model.createProperty( "http://purl.org/ontology/mo/recording_of" );
		
					/** <p>
        This is the inverse of the shortcut property recordedAs, allowing to relate directly a performance
        to a signal.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property records =  m_model.createProperty( "http://purl.org/ontology/mo/records" );
		
					/** <p>Associates a release with the corresponding release event</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property release =  m_model.createProperty( "http://purl.org/ontology/mo/release" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property releaseStatus =  m_model.createProperty( "http://purl.org/ontology/mo/releaseStatus" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property releaseType =  m_model.createProperty( "http://purl.org/ontology/mo/releaseType" );
		
					/** <p>
                Relates a musical manifestation to its release status (bootleg, ...)
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property release_status =  m_model.createProperty( "http://purl.org/ontology/mo/release_status" );
		
					/** <p>
        Relates a musical manifestation to its release type (interview, spoken word, album, ...)
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property release_type =  m_model.createProperty( "http://purl.org/ontology/mo/release_type" );
		
					/** <p>This relates two musical work or the expression of a musical work, where one is a remaster of the other. 
    
A remaster is a new version made for release from source recordings that were earlier released separately. This is usually done to improve the audio quality or adjust for more modern playback equipment. The process generally doesn't involve changing the music in any artistically important way. It may, however, result in tracks that are a few seconds longer or shorter.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property remaster_of =  m_model.createProperty( "http://purl.org/ontology/mo/remaster_of" );
		
					/** <p>Used to relate the remix of a musical work in a substantially altered version produced by mixing together individual tracks or segments of an original musical source work.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property remix_of =  m_model.createProperty( "http://purl.org/ontology/mo/remix_of" );
		
					/** <p>Used to relate an artist who remixed a musical work or the expression of a musical work. 
    
This involves taking just one other musical work and using audio editing to make it sound like a significantly different, but usually still recognisable, song. It can be used to link an artist to a single song that they remixed, or, if they remixed an entire musical work.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property remixed =  m_model.createProperty( "http://purl.org/ontology/mo/remixed" );
		
					/** <p>Used to relate a musical work or the expression of a musical work to an artist who remixed it. 
    
This involves taking just one other musical work and using audio editing to make it sound like a significantly different, but usually still recognisable, song. It can be used to link an artist to a single song that they remixed, or, if they remixed an entire musical work.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property remixer =  m_model.createProperty( "http://purl.org/ontology/mo/remixer" );
		
					/** <p>Used to link a work or the expression of a work to a review. 
    
The review does not have to be open content, as long as it is accessible to the general internet population.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property review =  m_model.createProperty( "http://purl.org/ontology/mo/review" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property sampleRate =  m_model.createProperty( "http://purl.org/ontology/mo/sampleRate" );
		
					/** <p>
        Associates a digital signal to its sample rate. It might be easier to express it this way instead of
        defining a timeline map:-) Range is xsd:float.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property sample_rate =  m_model.createProperty( "http://purl.org/ontology/mo/sample_rate" );
		
					/** <p>Used to relate an artist who sampled a Signal.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property sampled =  m_model.createProperty( "http://purl.org/ontology/mo/sampled" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property sampledVersionOf =  m_model.createProperty( "http://purl.org/ontology/mo/sampledVersionOf" );
		
					/** <p>
        Associates an analog signal with a sampled version of it
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property sampled_version =  m_model.createProperty( "http://purl.org/ontology/mo/sampled_version" );
		
					/** <p>
        Associates a digital signal with the analog version of it
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property sampled_version_of =  m_model.createProperty( "http://purl.org/ontology/mo/sampled_version_of" );
		
					/** <p>Used to relate the signal of a musical work to an artist who sampled it.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property sampler =  m_model.createProperty( "http://purl.org/ontology/mo/sampler" );
		
					/** <p>A person, a group of person or an organization selling an exemplar of a single manifestation.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property sell_item =  m_model.createProperty( "http://purl.org/ontology/mo/sell_item" );
		
					/** <p>Associates a group of signals with one of the signals it contains</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property signal =  m_model.createProperty( "http://purl.org/ontology/mo/signal" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property signalTime =  m_model.createProperty( "http://purl.org/ontology/mo/signalTime" );
		
					/** <p>
            A similarity relationships between two objects (so far, either an agent, a signal or a genre, but
        this could grow).
        This relationship is pretty general and doesn't make any assumptions on how the similarity claim
        was derived.
        Such similarity statements can come from a range of different sources (Musicbrainz similarities between
        artists, or coming from some automatic content analysis).
        However, the origin of such statements should be kept using a named graph approach - and ultimately, the 
        documents providing such statements should attach some metadata to themselves (confidence of the claim, etc.).
        </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property similar_to =  m_model.createProperty( "http://purl.org/ontology/mo/similar_to" );
		
					/** <p>Relates a performance to an involved singer</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property singer =  m_model.createProperty( "http://purl.org/ontology/mo/singer" );
		
					/** <p>Used to relate an artist doing long-time instrumental or vocal support for another artist.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property supporting_musician =  m_model.createProperty( "http://purl.org/ontology/mo/supporting_musician" );
		
					/** <p>
        Rate of speed or pace of music. Tempo markings are traditionally given in Italian; 
        common markings include: grave (solemn; very, very slow); largo (broad; very slow); 
        adagio (quite slow); andante (a walking pace); moderato (moderate); allegro (fast; cheerful); 
        vivace (lively); presto (very fast); accelerando (getting faster); ritardando (getting slower); 
        and a tempo (in time; returning to the original pace).
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property tempo =  m_model.createProperty( "http://purl.org/ontology/mo/tempo" );
		
					/** <p>Associates lyrics with their text.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property text =  m_model.createProperty( "http://purl.org/ontology/mo/text" );
		
					/** <p>
        Associates a Signal to a time object - its actual domain
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property time =  m_model.createProperty( "http://purl.org/ontology/mo/time" );
		
					/** <p>Indicates a part of a musical manifestation - in this particular case, a track.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property track =  m_model.createProperty( "http://purl.org/ontology/mo/track" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property trackNum =  m_model.createProperty( "http://purl.org/ontology/mo/trackNum" );
		
					/** <p>The track count of a record</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property track_count =  m_model.createProperty( "http://purl.org/ontology/mo/track_count" );
		
					/** <p>Indicates the position of a track on a record medium (a CD, etc.).</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property track_number =  m_model.createProperty( "http://purl.org/ontology/mo/track_number" );
		
					/** <p>Indicates that a work or the expression of a work has translated or transliterated into another expression of a work.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property translation_of =  m_model.createProperty( "http://purl.org/ontology/mo/translation_of" );
		
					/** <p>Indicates a musical work or the expression of a musical work that is a tribute to an artist - normally consisting of music being composed by the artist but performed by other artists. </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property tribute_to =  m_model.createProperty( "http://purl.org/ontology/mo/tribute_to" );
		
					/** <p>
        Indicates the TRMID of a track.
        TRM IDs are MusicBrainz' old AudioFingerprinting system. 
        TRM (TRM Recognizes Music) IDs are (somewhat) unique ids that represent 
        the audio signature of a musical piece (see AudioFingerprint).
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property trmid =  m_model.createProperty( "http://purl.org/ontology/mo/trmid" );
		
					/** <p>UPC stands for "Universal Product Code", which was the original barcode used in the United States and Canada. The UPC (now officially EAN.UCC-12 is a numerical method of identifying products without redundancy worldwide for all types of products in the retail sector. The EAN is a superset of the original UPC increasing the digits to 13 with the prefix 0 reserved for UPC. As of 2005, manufacturers are only allowed to use the new 13-digit codes on their items, rather than having two separate numbers.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property upc =  m_model.createProperty( "http://purl.org/ontology/mo/upc" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property usedInPerformance =  m_model.createProperty( "http://purl.org/ontology/mo/usedInPerformance" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property usedInRecording =  m_model.createProperty( "http://purl.org/ontology/mo/usedInRecording" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property usesSound =  m_model.createProperty( "http://purl.org/ontology/mo/usesSound" );
		
					/** <p/>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property usesWork =  m_model.createProperty( "http://purl.org/ontology/mo/usesWork" );
		
					/** <p>
            Links an object to an universally unique identifier for it.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property uuid =  m_model.createProperty( "http://purl.org/ontology/mo/uuid" );
		
					/** <p>A person, a group of person or an organization wanting an exemplar of a single manifestation.</p>
			* <p>Subclass of:<ul/></p> 
			*/
		public static final Property want_item =  m_model.createProperty( "http://purl.org/ontology/mo/want_item" );
		
					/** <p>
        Used to link an work, an expression of a work, a manifestation of a work, 
        a person, an instrument or a musical genre to its corresponding WikiPedia page. 
        The full URL should be used, not just the WikiName.
    </p>
			* <p>Subclass of:<ul/></p> 
			*/

		public static final Property wikipedia =  m_model.createProperty( "http://purl.org/ontology/mo/wikipedia" );
		
		public static final Property artistImage =  m_model.createProperty( "http://xmlns.com/foaf/0.1/img" );
		
		public static final Property bio =  m_model.createProperty( "http://dbpedia.org/property/abstract" );
 }
 